{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_fade9bbd.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_fade9bbd-module__P24rEa__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_fade9bbd.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * 🔥 기가차드 유틸리티: Tailwind 클래스 병합\n * clsx와 tailwind-merge를 결합하여 조건부 클래스와 중복 제거를 동시에 처리\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * 🔥 기가차드 유틸리티: 타입 안전한 키 추출\n */\nexport function getObjectKeys<T extends Record<string, unknown>>(obj: T): Array<keyof T> {\n  return Object.keys(obj) as Array<keyof T>;\n}\n\n/**\n * 🔥 기가차드 유틸리티: 딜레이 함수\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * 🔥 기가차드 유틸리티: 디바운스\n */\nexport function debounce<T extends unknown[]>(\n  func: (...args: T) => void,\n  waitMs: number\n): (...args: T) => void {\n  let timeoutId: NodeJS.Timeout | null = null;\n  \n  return (...args: T): void => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    \n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, waitMs);\n  };\n}\n\n/**\n * 🔥 기가차드 유틸리티: 포맷팅\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('ko-KR').format(num);\n}\n\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(date);\n}\n\n/**\n * 🔥 기가차드 유틸리티: 타입 가드\n */\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nexport function isArray<T>(value: unknown): value is T[] {\n  return Array.isArray(value);\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,4NAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAKO,SAAS,cAAiD,GAAM;IACrE,OAAO,OAAO,IAAI,CAAC;AACrB;AAKO,SAAS,MAAM,EAAU;IAC9B,OAAO,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;AACpD;AAKO,SAAS,SACd,IAA0B,EAC1B,MAAc;IAEd,IAAI,YAAmC;IAEvC,OAAO,CAAC,GAAG;QACT,IAAI,WAAW;YACb,aAAa;QACf;QAEA,YAAY,WAAW;YACrB,QAAQ;QACV,GAAG;IACL;AACF;AAKO,SAAS,aAAa,GAAW;IACtC,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;AAC/C;AAEO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,MAAM;QACN,OAAO;QACP,KAAK;IACP,GAAG,MAAM,CAAC;AACZ;AAKO,SAAS,SAAS,KAAc;IACrC,OAAO,OAAO,UAAU;AAC1B;AAEO,SAAS,SAAS,KAAc;IACrC,OAAO,OAAO,UAAU,YAAY,CAAC,MAAM;AAC7C;AAEO,SAAS,QAAW,KAAc;IACvC,OAAO,MAAM,OAAO,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Button.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, ButtonHTMLAttributes, ReactNode } from 'react';\nimport { cn } from '../../lib/utils';\nimport { Loader2 } from 'lucide-react';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst BUTTON_STYLES = {\n  base: 'inline-flex items-center justify-center rounded-lg font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none',\n  variants: {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',\n    outline: 'border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50 focus:ring-gray-500',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',\n    destructive: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500'\n  },\n  sizes: {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-sm',\n    lg: 'px-6 py-3 text-base',\n    icon: 'p-2'\n  }\n} as const;\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  readonly variant?: keyof typeof BUTTON_STYLES.variants;\n  readonly size?: keyof typeof BUTTON_STYLES.sizes;\n  readonly loading?: boolean;\n  readonly loadingText?: string;\n  readonly children: ReactNode;\n  readonly 'aria-label'?: string;\n}\n\n// 🔥 기가차드 규칙: forwardRef와 명시적 타입\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ \n    variant = 'primary', \n    size = 'md',\n    loading = false,\n    loadingText,\n    disabled,\n    className,\n    children,\n    'aria-label': ariaLabel,\n    ...props \n  }, ref) => {\n    \n    const isDisabled = disabled || loading;\n    \n    const buttonClassName = cn(\n      BUTTON_STYLES.base,\n      BUTTON_STYLES.variants[variant],\n      BUTTON_STYLES.sizes[size],\n      className\n    );\n\n    return (\n      <button\n        ref={ref}\n        className={buttonClassName}\n        disabled={isDisabled}\n        aria-label={ariaLabel}\n        aria-disabled={isDisabled}\n        {...props}\n      >\n        {loading && (\n          <Loader2 \n            className=\"w-4 h-4 mr-2 animate-spin\" \n            aria-hidden=\"true\"\n          />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,4BAA4B;AAC5B,MAAM,gBAAgB;IACpB,MAAM;IACN,UAAU;QACR,SAAS;QACT,WAAW;QACX,SAAS;QACT,OAAO;QACP,aAAa;IACf;IACA,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAYO,MAAM,uBAAS,CAAA,GAAA,8TAAA,CAAA,aAAU,AAAD,OAC7B,CAAC,EACC,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,cAAc,SAAS,EACvB,GAAG,OACJ,EAAE;IAED,MAAM,aAAa,YAAY;IAE/B,MAAM,kBAAkB,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACvB,cAAc,IAAI,EAClB,cAAc,QAAQ,CAAC,QAAQ,EAC/B,cAAc,KAAK,CAAC,KAAK,EACzB;IAGF,qBACE,8VAAC;QACC,KAAK;QACL,WAAW;QACX,UAAU;QACV,cAAY;QACZ,iBAAe;QACd,GAAG,KAAK;;YAER,yBACC,8VAAC,oSAAA,CAAA,UAAO;gBACN,WAAU;gBACV,eAAY;;;;;;YAGf,WAAW,cAAc,cAAc;;;;;;;AAG9C;;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/shared/logger.ts"],"sourcesContent":["// 🔥 기가차드 로거 시스템\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n}\n\nexport interface LogEntry {\n  level: LogLevel;\n  component: string;\n  message: string;\n  data?: unknown;\n  timestamp: Date;\n}\n\nclass LoggerService {\n  private logLevel: LogLevel = LogLevel.DEBUG; // 🔥 강제로 DEBUG 레벨 활성화\n  private logs: LogEntry[] = [];\n  private maxLogs = 1000;\n  private timers: Map<string, number> = new Map();\n\n  constructor() {\n    // 🔥 환경변수 기반 로그 레벨 설정\n    const envLogLevel = process.env.LOG_LEVEL?.toLowerCase();\n    const debugMode = process.env.DEBUG === 'true' || process.env.NODE_ENV === 'development';\n    \n    if (debugMode || envLogLevel === 'debug') {\n      this.logLevel = LogLevel.DEBUG;\n    } else if (envLogLevel === 'info') {\n      this.logLevel = LogLevel.INFO;\n    } else if (envLogLevel === 'warn') {\n      this.logLevel = LogLevel.WARN;\n    } else if (envLogLevel === 'error') {\n      this.logLevel = LogLevel.ERROR;\n    } else {\n      // 🔥 기본값: DEBUG 레벨\n      this.logLevel = LogLevel.DEBUG;\n    }\n    \n    console.log(`🔥 [LOGGER] Logger initialized - Level: ${LogLevel[this.logLevel]}, ENV: ${process.env.NODE_ENV}, DEBUG: ${process.env.DEBUG}`);\n  }\n\n  setLogLevel(level: LogLevel): void {\n    this.logLevel = level;\n  }\n\n  private log(level: LogLevel, component: string, message: string, data?: unknown): void {\n    if (level < this.logLevel) return;\n\n    const entry: LogEntry = {\n      level,\n      component,\n      message,\n      data,\n      timestamp: new Date(),\n    };\n\n    this.logs.push(entry);\n    \n    // 로그 개수 제한\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift();\n    }\n\n    // 🔥 콘솔 출력 - 환경변수 기반 + 강제 출력 모드\n    const timestamp = entry.timestamp.toISOString();\n    const levelName = LogLevel[level];\n    const prefix = `[${timestamp}] ${levelName} [${component}]`;\n    const verboseMode = process.env.VERBOSE_LOGGING === 'true';\n\n    // 🔥 강제 출력: DEBUG 레벨도 항상 표시\n    const shouldForceOutput = process.env.DEBUG === 'true' || process.env.NODE_ENV === 'development';\n\n    if (level >= this.logLevel || shouldForceOutput) {\n      switch (level) {\n        case LogLevel.DEBUG:\n          console.debug(`🔍 ${prefix}`, message, verboseMode && data ? data : '');\n          break;\n        case LogLevel.INFO:\n          console.info(`ℹ️ ${prefix}`, message, verboseMode && data ? data : '');\n          break;\n        case LogLevel.WARN:\n          console.warn(`⚠️ ${prefix}`, message, verboseMode && data ? data : '');\n          break;\n        case LogLevel.ERROR:\n          console.error(`❌ ${prefix}`, message, data || '');\n          break;\n      }\n    }\n  }\n\n  debug(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.DEBUG, component, message, data);\n  }\n\n  info(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.INFO, component, message, data);\n  }\n\n  warn(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.WARN, component, message, data);\n  }\n\n  error(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.ERROR, component, message, data);\n  }\n\n  getLogs(): LogEntry[] {\n    return [...this.logs];\n  }\n\n  clearLogs(): void {\n    this.logs = [];\n  }\n\n  getLogsByComponent(component: string): LogEntry[] {\n    return this.logs.filter(log => log.component === component);\n  }\n\n  getLogsByLevel(level: LogLevel): LogEntry[] {\n    return this.logs.filter(log => log.level >= level);\n  }\n\n  // 🔥 Timer 기능\n  time(label: string): void {\n    this.timers.set(label, performance.now());\n    this.debug('TIMER', `Timer started: ${label}`);\n  }\n\n  timeEnd(label: string): void {\n    const startTime = this.timers.get(label);\n    if (startTime === undefined) {\n      this.warn('TIMER', `Timer not found: ${label}`);\n      return;\n    }\n    \n    const duration = performance.now() - startTime;\n    this.timers.delete(label);\n    this.info('TIMER', `Timer completed: ${label}`, { duration: `${duration.toFixed(3)}ms` });\n  }\n}\n\nexport const Logger = new LoggerService();\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AAwBO;AAvBjB,IAAA,AAAK,kCAAA;;;;;WAAA;;AAeZ,MAAM;IACI,aAAoC;IACpC,OAAmB,EAAE,CAAC;IACtB,UAAU,KAAK;IACf,SAA8B,IAAI,MAAM;IAEhD,aAAc;QACZ,sBAAsB;QACtB,MAAM,cAAc,iUAAA,CAAA,UAAO,CAAC,GAAG,CAAC,SAAS,EAAE;QAC3C,MAAM,YAAY,iUAAA,CAAA,UAAO,CAAC,GAAG,CAAC,KAAK,KAAK,UAAU,oDAAyB;QAE3E,wCAA0C;YACxC,IAAI,CAAC,QAAQ;QACf,OAAO;;QASP;QAEA,QAAQ,GAAG,CAAC,CAAC,wCAAwC,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,kDAAuB,SAAS,EAAE,iUAAA,CAAA,UAAO,CAAC,GAAG,CAAC,KAAK,EAAE;IAC7I;IAEA,YAAY,KAAe,EAAQ;QACjC,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEQ,IAAI,KAAe,EAAE,SAAiB,EAAE,OAAe,EAAE,IAAc,EAAQ;QACrF,IAAI,QAAQ,IAAI,CAAC,QAAQ,EAAE;QAE3B,MAAM,QAAkB;YACtB;YACA;YACA;YACA;YACA,WAAW,IAAI;QACjB;QAEA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAEf,WAAW;QACX,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,KAAK;QACjB;QAEA,gCAAgC;QAChC,MAAM,YAAY,MAAM,SAAS,CAAC,WAAW;QAC7C,MAAM,YAAY,QAAQ,CAAC,MAAM;QACjC,MAAM,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,UAAU,CAAC,CAAC;QAC3D,MAAM,cAAc,iUAAA,CAAA,UAAO,CAAC,GAAG,CAAC,eAAe,KAAK;QAEpD,4BAA4B;QAC5B,MAAM,oBAAoB,iUAAA,CAAA,UAAO,CAAC,GAAG,CAAC,KAAK,KAAK,UAAU,oDAAyB;QAEnF,IAAI,SAAS,IAAI,CAAC,QAAQ,IAAI,mBAAmB;YAC/C,OAAQ;gBACN;oBACE,QAAQ,KAAK,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,eAAe,OAAO,OAAO;oBACpE;gBACF;oBACE,QAAQ,IAAI,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,eAAe,OAAO,OAAO;oBACnE;gBACF;oBACE,QAAQ,IAAI,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,eAAe,OAAO,OAAO;oBACnE;gBACF;oBACE,QAAQ,KAAK,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,QAAQ;oBAC9C;YACJ;QACF;IACF;IAEA,MAAM,SAAiB,EAAE,OAAe,EAAE,IAAc,EAAQ;QAC9D,IAAI,CAAC,GAAG,IAAiB,WAAW,SAAS;IAC/C;IAEA,KAAK,SAAiB,EAAE,OAAe,EAAE,IAAc,EAAQ;QAC7D,IAAI,CAAC,GAAG,IAAgB,WAAW,SAAS;IAC9C;IAEA,KAAK,SAAiB,EAAE,OAAe,EAAE,IAAc,EAAQ;QAC7D,IAAI,CAAC,GAAG,IAAgB,WAAW,SAAS;IAC9C;IAEA,MAAM,SAAiB,EAAE,OAAe,EAAE,IAAc,EAAQ;QAC9D,IAAI,CAAC,GAAG,IAAiB,WAAW,SAAS;IAC/C;IAEA,UAAsB;QACpB,OAAO;eAAI,IAAI,CAAC,IAAI;SAAC;IACvB;IAEA,YAAkB;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE;IAChB;IAEA,mBAAmB,SAAiB,EAAc;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,MAAO,IAAI,SAAS,KAAK;IACnD;IAEA,eAAe,KAAe,EAAc;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,MAAO,IAAI,KAAK,IAAI;IAC9C;IAEA,cAAc;IACd,KAAK,KAAa,EAAQ;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,YAAY,GAAG;QACtC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,EAAE,OAAO;IAC/C;IAEA,QAAQ,KAAa,EAAQ;QAC3B,MAAM,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAClC,IAAI,cAAc,WAAW;YAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO;YAC9C;QACF;QAEA,MAAM,WAAW,YAAY,GAAG,KAAK;QACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,EAAE;YAAE,UAAU,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,CAAC;QAAC;IACzF;AACF;AAEO,MAAM,SAAS,IAAI","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Tooltip.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode, useState, useRef, useEffect, cloneElement, isValidElement } from 'react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst TOOLTIP_STYLES = {\n  trigger: 'inline-block',\n  tooltip: 'absolute z-50 px-3 py-2 text-xs font-medium text-white bg-slate-900 rounded-md shadow-lg whitespace-nowrap pointer-events-none transition-opacity duration-200',\n  arrow: 'absolute w-2 h-2 bg-slate-900 transform rotate-45',\n  positions: {\n    top: {\n      tooltip: 'bottom-full left-1/2 transform -translate-x-1/2 mb-2',\n      arrow: 'top-full left-1/2 transform -translate-x-1/2 -translate-y-1/2',\n    },\n    bottom: {\n      tooltip: 'top-full left-1/2 transform -translate-x-1/2 mt-2',\n      arrow: 'bottom-full left-1/2 transform -translate-x-1/2 translate-y-1/2',\n    },\n    left: {\n      tooltip: 'right-full top-1/2 transform -translate-y-1/2 mr-2',\n      arrow: 'left-full top-1/2 transform -translate-y-1/2 -translate-x-1/2',\n    },\n    right: {\n      tooltip: 'left-full top-1/2 transform -translate-y-1/2 ml-2',\n      arrow: 'right-full top-1/2 transform -translate-y-1/2 translate-x-1/2',\n    },\n  },\n  variants: {\n    default: 'bg-slate-900 text-white',\n    light: 'bg-white text-slate-900 border border-slate-200 shadow-md',\n    error: 'bg-red-600 text-white',\n    success: 'bg-green-600 text-white',\n    warning: 'bg-yellow-600 text-white',\n  },\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface TooltipProps {\n  readonly content: ReactNode;\n  readonly children: ReactNode;\n  readonly side?: keyof typeof TOOLTIP_STYLES.positions;\n  readonly variant?: keyof typeof TOOLTIP_STYLES.variants;\n  readonly delay?: number;\n  readonly disabled?: boolean;\n  readonly showArrow?: boolean;\n  readonly trigger?: 'hover' | 'click' | 'focus' | 'manual';\n  readonly open?: boolean;\n  readonly onOpenChange?: (open: boolean) => void;\n  readonly className?: string;\n  readonly sideOffset?: number;\n}\n\nfunction cn(...classes: (string | undefined | false | null)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function Tooltip({\n  content,\n  children,\n  side = 'top',\n  variant = 'default',\n  delay = 200,\n  disabled = false,\n  showArrow = true,\n  trigger = 'hover',\n  open: controlledOpen,\n  onOpenChange,\n  className,\n  sideOffset = 0,\n}: TooltipProps): React.ReactElement {\n  const [internalOpen, setInternalOpen] = useState<boolean>(false);\n  const [mounted, setMounted] = useState<boolean>(false);\n  const triggerRef = useRef<HTMLElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : internalOpen;\n  const isControlled = controlledOpen !== undefined;\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const setOpen = (open: boolean): void => {\n    if (disabled) return;\n\n    if (isControlled) {\n      onOpenChange?.(open);\n    } else {\n      setInternalOpen(open);\n    }\n\n    Logger.debug('TOOLTIP', `Tooltip ${open ? 'opened' : 'closed'}`, { side, trigger });\n  };\n\n  const showTooltip = (): void => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      setOpen(true);\n    }, delay);\n  };\n\n  const hideTooltip = (): void => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    setOpen(false);\n  };\n\n  const handleMouseEnter = (): void => {\n    if (trigger === 'hover') {\n      showTooltip();\n    }\n  };\n\n  const handleMouseLeave = (): void => {\n    if (trigger === 'hover') {\n      hideTooltip();\n    }\n  };\n\n  const handleClick = (): void => {\n    if (trigger === 'click') {\n      setOpen(!isOpen);\n    }\n  };\n\n  const handleFocus = (): void => {\n    if (trigger === 'focus') {\n      showTooltip();\n    }\n  };\n\n  const handleBlur = (): void => {\n    if (trigger === 'focus') {\n      hideTooltip();\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent): void => {\n    if (event.key === 'Escape' && isOpen) {\n      hideTooltip();\n    }\n  };\n\n  // children에 이벤트 핸들러 추가\n  const triggerElement = isValidElement(children) \n    ? cloneElement(children as React.ReactElement<any>, {\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        onKeyDown: handleKeyDown,\n        'aria-describedby': isOpen ? 'tooltip' : undefined,\n      })\n    : children;\n\n  // Tooltip 스타일 계산\n  const tooltipClassName = cn(\n    TOOLTIP_STYLES.tooltip,\n    TOOLTIP_STYLES.positions[side].tooltip,\n    TOOLTIP_STYLES.variants[variant],\n    isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none',\n    className\n  );\n\n  const arrowClassName = cn(\n    TOOLTIP_STYLES.arrow,\n    TOOLTIP_STYLES.positions[side].arrow,\n    variant === 'light' ? 'bg-white border-l border-t border-slate-200' : 'bg-slate-900'\n  );\n\n  if (!mounted) {\n    return <div className={TOOLTIP_STYLES.trigger}>{children}</div>;\n  }\n\n  return (\n    <div className={TOOLTIP_STYLES.trigger}>\n      {triggerElement}\n      {isOpen && content && (\n        <div\n          ref={tooltipRef}\n          id=\"tooltip\"\n          role=\"tooltip\"\n          className={tooltipClassName}\n          style={{\n            [side === 'top' || side === 'bottom' ? 'marginTop' : 'marginLeft']: \n              side === 'top' || side === 'left' ? -sideOffset : sideOffset,\n          }}\n        >\n          {content}\n          {showArrow && (\n            <div \n              className={arrowClassName} \n              aria-hidden=\"true\"\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// 🔥 편의 함수들\nexport const TooltipProvider = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n\nexport const TooltipTrigger = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n\nexport const TooltipContent = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Badge.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, forwardRef } from 'react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst BADGE_STYLES = {\n  base: 'inline-flex items-center rounded-full text-xs font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n  sizes: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-1 text-xs',\n    lg: 'px-3 py-1.5 text-sm',\n  },\n  variants: {\n    default: 'bg-slate-100 text-slate-800 hover:bg-slate-200',\n    primary: 'bg-blue-100 text-blue-800 hover:bg-blue-200',\n    success: 'bg-green-100 text-green-800 hover:bg-green-200',\n    warning: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200',\n    danger: 'bg-red-100 text-red-800 hover:bg-red-200',\n    purple: 'bg-purple-100 text-purple-800 hover:bg-purple-200',\n    orange: 'bg-orange-100 text-orange-800 hover:bg-orange-200',\n    solid: 'bg-slate-900 text-white hover:bg-slate-800',\n    outline: 'border border-slate-300 bg-transparent text-slate-700 hover:bg-slate-50',\n  },\n  interactive: 'cursor-pointer select-none',\n  disabled: 'opacity-50 cursor-not-allowed pointer-events-none',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface BadgeProps {\n  readonly variant?: keyof typeof BADGE_STYLES.variants;\n  readonly size?: keyof typeof BADGE_STYLES.sizes;\n  readonly interactive?: boolean;\n  readonly disabled?: boolean;\n  readonly className?: string;\n  readonly children: ReactNode;\n  readonly onClick?: () => void;\n  readonly role?: string;\n  readonly 'aria-label'?: string;\n  readonly 'aria-pressed'?: boolean;\n}\n\nfunction cn(...classes: (string | undefined | false)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ \n    variant = 'default', \n    size = 'md',\n    interactive = false,\n    disabled = false,\n    className, \n    children, \n    onClick,\n    role,\n    'aria-label': ariaLabel,\n    'aria-pressed': ariaPressed,\n    ...props \n  }, ref) => {\n    \n    const badgeClassName = cn(\n      BADGE_STYLES.base,\n      BADGE_STYLES.variants[variant],\n      BADGE_STYLES.sizes[size],\n      interactive && BADGE_STYLES.interactive,\n      disabled && BADGE_STYLES.disabled,\n      className\n    );\n\n    const handleClick = (): void => {\n      if (disabled || !onClick) return;\n      \n      Logger.info('BADGE', `Badge clicked: ${variant}`, { size, interactive });\n      onClick();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLSpanElement>): void => {\n      if (disabled || !onClick) return;\n      \n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault();\n        handleClick();\n      }\n    };\n\n    return (\n      <span\n        ref={ref}\n        className={badgeClassName}\n        onClick={interactive ? handleClick : undefined}\n        onKeyDown={interactive ? handleKeyDown : undefined}\n        role={interactive ? (role || 'button') : role}\n        tabIndex={interactive && !disabled ? 0 : undefined}\n        aria-label={ariaLabel}\n        aria-pressed={interactive ? ariaPressed : undefined}\n        aria-disabled={disabled}\n        {...props}\n      >\n        {children}\n      </span>\n    );\n  }\n);\n\nBadge.displayName = 'Badge';\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,4BAA4B;AAC5B,MAAM,eAAe;IACnB,MAAM;IACN,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,UAAU;QACR,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,SAAS;IACX;IACA,aAAa;IACb,UAAU;AACZ;AAgBA,SAAS,GAAG,GAAG,OAAuC;IACpD,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACtC;AAEO,MAAM,sBAAQ,CAAA,GAAA,8TAAA,CAAA,aAAU,AAAD,OAC5B,CAAC,EACC,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,cAAc,KAAK,EACnB,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,cAAc,SAAS,EACvB,gBAAgB,WAAW,EAC3B,GAAG,OACJ,EAAE;IAED,MAAM,iBAAiB,GACrB,aAAa,IAAI,EACjB,aAAa,QAAQ,CAAC,QAAQ,EAC9B,aAAa,KAAK,CAAC,KAAK,EACxB,eAAe,aAAa,WAAW,EACvC,YAAY,aAAa,QAAQ,EACjC;IAGF,MAAM,cAAc;QAClB,IAAI,YAAY,CAAC,SAAS;QAE1B,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,SAAS,EAAE;YAAE;YAAM;QAAY;QACtE;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,YAAY,CAAC,SAAS;QAE1B,IAAI,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,KAAK,KAAK;YAC9C,MAAM,cAAc;YACpB;QACF;IACF;IAEA,qBACE,8VAAC;QACC,KAAK;QACL,WAAW;QACX,SAAS,cAAc,cAAc;QACrC,WAAW,cAAc,gBAAgB;QACzC,MAAM,cAAe,QAAQ,WAAY;QACzC,UAAU,eAAe,CAAC,WAAW,IAAI;QACzC,cAAY;QACZ,gBAAc,cAAc,cAAc;QAC1C,iBAAe;QACd,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/layout/AppSidebar.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Home, \n  FolderOpen, \n  BarChart3, \n  Sparkles, \n  Settings,\n  ChevronLeft,\n  ChevronRight,\n  type LucideIcon \n} from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { Tooltip } from '../ui/Tooltip';\nimport { Badge } from '../ui/Badge';\nimport { Logger } from '../../../shared/logger';\n    \n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst SIDEBAR_STYLES = {\n  container: 'flex flex-col h-full bg-white dark:bg-slate-900 border-r border-slate-200 dark:border-slate-700 transition-all duration-300',\n  collapsed: 'w-16',\n  expanded: 'w-64',\n  logoSection: 'h-auto min-h-[4rem] flex flex-col justify-center border-b border-slate-200 dark:border-slate-700 px-6 py-3',\n  logoCollapsed: 'h-auto min-h-[8rem] flex items-center justify-center border-b border-slate-200 dark:border-slate-700 px-3 py-4',\n  logoText: 'text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent',\n  logoIcon: 'w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-sm',\n  profileSection: 'border-b border-slate-200 dark:border-slate-700 p-4',\n  profileCollapsed: 'border-b border-slate-200 dark:border-slate-700 p-3 flex flex-col items-center gap-2',\n  profileContent: 'flex items-center gap-3',\n  profileInfo: 'flex-1',\n  profileName: 'font-medium text-slate-900 dark:text-slate-100 text-sm',\n  profileStatus: 'flex items-center gap-1 mt-0.5',\n  statusDot: 'w-1.5 h-1.5 bg-green-500 rounded-full',\n  statusText: 'text-xs text-slate-500 dark:text-slate-400',\n  collapseButton: 'h-6 w-6 p-0 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300',\n  navSection: 'flex-1 py-4',\n  navList: 'space-y-1 px-3',\n  navItem: 'flex items-center h-10 px-3 text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 rounded-lg transition-all duration-150 group cursor-pointer',\n  navItemActive: 'flex items-center h-10 px-3 bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-400 rounded-lg font-medium',\n  navItemCollapsed: 'flex items-center justify-center h-10 w-10 mx-auto text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 rounded-lg transition-all duration-150 cursor-pointer',\n  navItemActiveCollapsed: 'flex items-center justify-center h-10 w-10 mx-auto bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-400 rounded-lg',\n  icon: 'w-5 h-5 group-hover:scale-110 transition-transform duration-150 flex-shrink-0',\n  iconCollapsed: 'w-5 h-5',\n  text: 'ml-3 font-medium',\n  badge: 'ml-auto',\n  bottomSection: 'border-t border-slate-200 dark:border-slate-700 p-3',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\ninterface SidebarItem {\n  readonly id: string;\n  readonly label: string;\n  readonly icon: LucideIcon;\n  readonly href: string;\n  readonly badge?: number;\n  readonly ariaLabel?: string;\n}\n\nexport interface AppSidebarProps {\n  readonly activeRoute?: string;\n  readonly onNavigate?: (href: string) => void;\n  readonly collapsed?: boolean;\n  readonly onToggleCollapse?: () => void;\n}\n\n// 🔥 기가차드 규칙: 상수 분리\nconst SIDEBAR_ITEMS: readonly SidebarItem[] = [\n  { \n    id: 'dashboard', \n    label: '대시보드', \n    icon: Home, \n    href: '/',\n    ariaLabel: '대시보드로 이동'\n  },\n  { \n    id: 'projects', \n    label: '프로젝트', \n    icon: FolderOpen, \n    href: '/projects',\n    ariaLabel: '프로젝트 관리로 이동'\n  },\n  { \n    id: 'analytics', \n    label: '통계', \n    icon: BarChart3, \n    href: '/analytics',\n    ariaLabel: '분석 및 통계로 이동'\n  },\n  { \n    id: 'ai', \n    label: 'Loop AI', \n    icon: Sparkles, \n    href: '/ai',\n    badge: 2,\n    ariaLabel: 'AI 도구로 이동'\n  },\n  { \n    id: 'settings', \n    label: '설정', \n    icon: Settings, \n    href: '/settings',\n    ariaLabel: '설정으로 이동'\n  },\n] as const;\n\nexport function AppSidebar({ \n  activeRoute = '/',\n  onNavigate,\n  collapsed: controlledCollapsed,\n  onToggleCollapse\n}: AppSidebarProps): React.ReactElement {\n  \n  const [internalCollapsed, setInternalCollapsed] = useState<boolean>(false);\n  const isControlled = controlledCollapsed !== undefined;\n  const collapsed = isControlled ? controlledCollapsed : internalCollapsed;\n\n  const handleToggleCollapse = (): void => {\n    if (isControlled) {\n      onToggleCollapse?.();\n    } else {\n      setInternalCollapsed(!collapsed);\n    }\n    Logger.info('SIDEBAR', `Sidebar ${collapsed ? 'expanded' : 'collapsed'}`);\n  };\n\n  const handleNavigate = (item: SidebarItem): void => {\n    Logger.info('SIDEBAR', `Navigation to ${item.label}`, { href: item.href });\n    onNavigate?.(item.href);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, item: SidebarItem): void => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleNavigate(item);\n    }\n  };\n\n  const renderNavItem = (item: SidebarItem): React.ReactElement => {\n    const isActive = activeRoute === item.href;\n    const Icon = item.icon;\n    \n    const navItemContent = (\n      <div\n        className={\n          collapsed\n            ? isActive \n              ? SIDEBAR_STYLES.navItemActiveCollapsed\n              : SIDEBAR_STYLES.navItemCollapsed\n            : isActive \n              ? SIDEBAR_STYLES.navItemActive \n              : SIDEBAR_STYLES.navItem\n        }\n        role=\"button\"\n        tabIndex={0}\n        onClick={() => handleNavigate(item)}\n        onKeyDown={(e) => handleKeyDown(e, item)}\n        aria-label={item.ariaLabel || item.label}\n        aria-current={isActive ? 'page' : undefined}\n      >\n        <Icon className={collapsed ? SIDEBAR_STYLES.iconCollapsed : SIDEBAR_STYLES.icon} />\n        {!collapsed && (\n          <>\n            <span className={SIDEBAR_STYLES.text}>{item.label}</span>\n            {item.badge && item.badge > 0 && (\n              <Badge variant=\"danger\" size=\"sm\" className={SIDEBAR_STYLES.badge}>\n                {item.badge > 9 ? '9+' : item.badge}\n              </Badge>\n            )}\n          </>\n        )}\n      </div>\n    );\n\n    return (\n      <div key={item.id}>\n        {collapsed ? (\n          <Tooltip content={item.label} side=\"right\">\n            <div>\n              {navItemContent}\n            </div>\n          </Tooltip>\n        ) : (\n          navItemContent\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <aside \n      className={`${SIDEBAR_STYLES.container} ${\n        collapsed ? SIDEBAR_STYLES.collapsed : SIDEBAR_STYLES.expanded\n      }`}\n      aria-label=\"사이드바 네비게이션\"\n      role=\"navigation\"\n    >\n      {/* 로고 */}\n      <div className={collapsed ? SIDEBAR_STYLES.logoCollapsed : SIDEBAR_STYLES.logoSection}>\n        {collapsed ? (\n          <div className=\"flex flex-col items-center gap-3 py-4\">\n            <div className={SIDEBAR_STYLES.logoIcon}>L</div>\n            \n            {/* 축소 시 사용자 프로필 - 아래로 이동 */}\n            <div \n              className=\"flex flex-col items-center gap-1 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800 p-2 rounded-lg transition-colors mt-2\"\n              onClick={() => {\n                Logger.info('SIDEBAR', 'User profile clicked (collapsed)');\n                onNavigate?.('/settings');\n              }}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"사용자 프로필\"\n            >\n              <div className=\"w-7 h-7 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium text-xs\">\n                U\n              </div>\n              <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\" />\n            </div>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className={SIDEBAR_STYLES.collapseButton}\n              onClick={handleToggleCollapse}\n              aria-label=\"사이드바 확장\"\n            >\n              <ChevronRight className=\"w-3 h-3\" />\n            </Button>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between w-full\">\n              <h1 className={SIDEBAR_STYLES.logoText}>Loop</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className={SIDEBAR_STYLES.collapseButton}\n                onClick={handleToggleCollapse}\n                aria-label=\"사이드바 축소\"\n              >\n                <ChevronLeft className=\"w-3 h-3\" />\n              </Button>\n            </div>\n            \n            {/* 확장 시 사용자 프로필 */}\n            <div \n              className=\"flex items-center gap-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800 p-2 rounded-lg transition-colors\"\n              onClick={() => {\n                Logger.info('SIDEBAR', 'User profile clicked');\n                onNavigate?.('/settings');\n              }}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"사용자 프로필\"\n            >\n              <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium text-sm\">\n                U\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"font-medium text-slate-900 dark:text-slate-100 text-sm\">Loop 사용자</div>\n                <div className=\"flex items-center gap-1 mt-0.5\">\n                  <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\" />\n                  <span className=\"text-xs text-slate-500 dark:text-slate-400\">온라인</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 네비게이션 */}\n      <nav className={SIDEBAR_STYLES.navSection} aria-label=\"메인 메뉴\">\n        <div className={SIDEBAR_STYLES.navList}>\n          {SIDEBAR_ITEMS.map(renderNavItem)}\n        </div>\n      </nav>\n    </aside>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;;;AAhBA;;;;;;;AAkBA,4BAA4B;AAC5B,MAAM,iBAAiB;IACrB,WAAW;IACX,WAAW;IACX,UAAU;IACV,aAAa;IACb,eAAe;IACf,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,aAAa;IACb,eAAe;IACf,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,SAAS;IACT,SAAS;IACT,eAAe;IACf,kBAAkB;IAClB,wBAAwB;IACxB,MAAM;IACN,eAAe;IACf,MAAM;IACN,OAAO;IACP,eAAe;AACjB;AAmBA,oBAAoB;AACpB,MAAM,gBAAwC;IAC5C;QACE,IAAI;QACJ,OAAO;QACP,MAAM,0RAAA,CAAA,OAAI;QACV,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM,0SAAA,CAAA,aAAU;QAChB,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM,4SAAA,CAAA,YAAS;QACf,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM,kSAAA,CAAA,WAAQ;QACd,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM,kSAAA,CAAA,WAAQ;QACd,MAAM;QACN,WAAW;IACb;CACD;AAEM,SAAS,WAAW,EACzB,cAAc,GAAG,EACjB,UAAU,EACV,WAAW,mBAAmB,EAC9B,gBAAgB,EACA;;IAEhB,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAW;IACpE,MAAM,eAAe,wBAAwB;IAC7C,MAAM,YAAY,eAAe,sBAAsB;IAEvD,MAAM,uBAAuB;QAC3B,IAAI,cAAc;YAChB;QACF,OAAO;YACL,qBAAqB,CAAC;QACxB;QACA,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,aAAa,aAAa;IAC1E;IAEA,MAAM,iBAAiB,CAAC;QACtB,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,KAAK,KAAK,EAAE,EAAE;YAAE,MAAM,KAAK,IAAI;QAAC;QACxE,aAAa,KAAK,IAAI;IACxB;IAEA,MAAM,gBAAgB,CAAC,OAA4B;QACjD,IAAI,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,KAAK,KAAK;YAC9C,MAAM,cAAc;YACpB,eAAe;QACjB;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,MAAM,WAAW,gBAAgB,KAAK,IAAI;QAC1C,MAAM,OAAO,KAAK,IAAI;QAEtB,MAAM,+BACJ,8VAAC;YACC,WACE,YACI,WACE,eAAe,sBAAsB,GACrC,eAAe,gBAAgB,GACjC,WACE,eAAe,aAAa,GAC5B,eAAe,OAAO;YAE9B,MAAK;YACL,UAAU;YACV,SAAS,IAAM,eAAe;YAC9B,WAAW,CAAC,IAAM,cAAc,GAAG;YACnC,cAAY,KAAK,SAAS,IAAI,KAAK,KAAK;YACxC,gBAAc,WAAW,SAAS;;8BAElC,8VAAC;oBAAK,WAAW,YAAY,eAAe,aAAa,GAAG,eAAe,IAAI;;;;;;gBAC9E,CAAC,2BACA;;sCACE,8VAAC;4BAAK,WAAW,eAAe,IAAI;sCAAG,KAAK,KAAK;;;;;;wBAChD,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,mBAC1B,8VAAC,gJAAA,CAAA,QAAK;4BAAC,SAAQ;4BAAS,MAAK;4BAAK,WAAW,eAAe,KAAK;sCAC9D,KAAK,KAAK,GAAG,IAAI,OAAO,KAAK,KAAK;;;;;;;;;;;;;;QAQ/C,qBACE,8VAAC;sBACE,0BACC,8VAAC,kJAAA,CAAA,UAAO;gBAAC,SAAS,KAAK,KAAK;gBAAE,MAAK;0BACjC,cAAA,8VAAC;8BACE;;;;;;;;;;uBAIL;WARM,KAAK,EAAE;;;;;IAYrB;IAEA,qBACE,8VAAC;QACC,WAAW,GAAG,eAAe,SAAS,CAAC,CAAC,EACtC,YAAY,eAAe,SAAS,GAAG,eAAe,QAAQ,EAC9D;QACF,cAAW;QACX,MAAK;;0BAGL,8VAAC;gBAAI,WAAW,YAAY,eAAe,aAAa,GAAG,eAAe,WAAW;0BAClF,0BACC,8VAAC;oBAAI,WAAU;;sCACb,8VAAC;4BAAI,WAAW,eAAe,QAAQ;sCAAE;;;;;;sCAGzC,8VAAC;4BACC,WAAU;4BACV,SAAS;gCACP,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,WAAW;gCACvB,aAAa;4BACf;4BACA,MAAK;4BACL,UAAU;4BACV,cAAW;;8CAEX,8VAAC;oCAAI,WAAU;8CAAmG;;;;;;8CAGlH,8VAAC;oCAAI,WAAU;;;;;;;;;;;;sCAGjB,8VAAC,iJAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAW,eAAe,cAAc;4BACxC,SAAS;4BACT,cAAW;sCAEX,cAAA,8VAAC,8SAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;;;;;;yCAI5B,8VAAC;oBAAI,WAAU;;sCACb,8VAAC;4BAAI,WAAU;;8CACb,8VAAC;oCAAG,WAAW,eAAe,QAAQ;8CAAE;;;;;;8CACxC,8VAAC,iJAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAW,eAAe,cAAc;oCACxC,SAAS;oCACT,cAAW;8CAEX,cAAA,8VAAC,4SAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAK3B,8VAAC;4BACC,WAAU;4BACV,SAAS;gCACP,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,WAAW;gCACvB,aAAa;4BACf;4BACA,MAAK;4BACL,UAAU;4BACV,cAAW;;8CAEX,8VAAC;oCAAI,WAAU;8CAAmG;;;;;;8CAGlH,8VAAC;oCAAI,WAAU;;sDACb,8VAAC;4CAAI,WAAU;sDAAyD;;;;;;sDACxE,8VAAC;4CAAI,WAAU;;8DACb,8VAAC;oDAAI,WAAU;;;;;;8DACf,8VAAC;oDAAK,WAAU;8DAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASzE,8VAAC;gBAAI,WAAW,eAAe,UAAU;gBAAE,cAAW;0BACpD,cAAA,8VAAC;oBAAI,WAAW,eAAe,OAAO;8BACnC,cAAc,GAAG,CAAC;;;;;;;;;;;;;;;;;AAK7B;GA7KgB;KAAA","debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Input.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, useState, ReactNode } from 'react';\nimport { Eye, EyeOff, Search, X } from 'lucide-react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst INPUT_STYLES = {\n  base: 'flex h-10 w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-slate-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:bg-slate-900 dark:text-slate-50 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus:ring-blue-400',\n  sizes: {\n    sm: 'h-8 text-xs',\n    md: 'h-10 text-sm',\n    lg: 'h-12 text-base',\n  },\n  variants: {\n    default: 'border-slate-300 focus:ring-blue-500',\n    error: 'border-red-300 focus:ring-red-500 focus:border-red-500',\n    success: 'border-green-300 focus:ring-green-500 focus:border-green-500',\n  },\n  withIcon: {\n    left: 'pl-10',\n    right: 'pr-10',\n  },\n  container: 'relative w-full',\n  iconContainer: {\n    left: 'absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 dark:text-slate-500',\n    right: 'absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 dark:text-slate-500',\n  },\n  iconButton: 'absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 cursor-pointer transition-colors',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  readonly size?: keyof typeof INPUT_STYLES.sizes;\n  readonly variant?: keyof typeof INPUT_STYLES.variants;\n  readonly leftIcon?: ReactNode;\n  readonly rightIcon?: ReactNode;\n  readonly clearable?: boolean;\n  readonly label?: string;\n  readonly error?: string;\n  readonly helperText?: string;\n  readonly required?: boolean;\n  readonly onClear?: () => void;\n}\n\nfunction cn(...classes: (string | undefined | false | null)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ \n    className,\n    type = 'text',\n    size = 'md',\n    variant = 'default',\n    leftIcon,\n    rightIcon,\n    clearable = false,\n    label,\n    error,\n    helperText,\n    required = false,\n    disabled,\n    value,\n    onChange,\n    onClear,\n    ...props \n  }, ref) => {\n    \n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [focused, setFocused] = useState<boolean>(false);\n\n    const isPassword = type === 'password';\n    const hasValue = value !== undefined && value !== '';\n    const showClearButton = clearable && hasValue && !disabled;\n    const showPasswordToggle = isPassword && !disabled;\n\n    const inputClassName = cn(\n      INPUT_STYLES.base,\n      INPUT_STYLES.sizes[size],\n      INPUT_STYLES.variants[error ? 'error' : variant],\n      leftIcon ? INPUT_STYLES.withIcon.left : false,\n      (rightIcon || showClearButton || showPasswordToggle) ? INPUT_STYLES.withIcon.right : false,\n      className\n    );\n\n    const handleClear = (): void => {\n      if (onClear) {\n        onClear();\n      } else if (onChange) {\n        // 클리어 이벤트 시뮬레이션\n        const event = {\n          target: { value: '' },\n          currentTarget: { value: '' },\n        } as React.ChangeEvent<HTMLInputElement>;\n        onChange(event);\n      }\n      Logger.debug('INPUT', 'Input cleared');\n    };\n\n    const togglePasswordVisibility = (): void => {\n      setShowPassword(!showPassword);\n      Logger.debug('INPUT', `Password visibility toggled: ${!showPassword}`);\n    };\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n      setFocused(true);\n      props.onFocus?.(event);\n    };\n\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n      setFocused(false);\n      props.onBlur?.(event);\n    };\n\n    const actualType = isPassword && showPassword ? 'text' : type;\n\n    const labelId = label ? `input-label-${Math.random().toString(36).substr(2, 9)}` : undefined;\n    const errorId = error ? `input-error-${Math.random().toString(36).substr(2, 9)}` : undefined;\n    const helperId = helperText ? `input-helper-${Math.random().toString(36).substr(2, 9)}` : undefined;\n\n    return (\n      <div className=\"w-full\">\n        {/* 라벨 */}\n        {label && (\n          <label \n            id={labelId}\n            htmlFor={props.id}\n            className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\"\n          >\n            {label}\n            {required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        )}\n\n        {/* Input Container */}\n        <div className={INPUT_STYLES.container}>\n          {/* 좌측 아이콘 */}\n          {leftIcon && (\n            <div className={INPUT_STYLES.iconContainer.left}>\n              {leftIcon}\n            </div>\n          )}\n\n          {/* Input Field */}\n          <input\n            ref={ref}\n            type={actualType}\n            className={inputClassName}\n            disabled={disabled}\n            value={value}\n            onChange={onChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            aria-labelledby={labelId}\n            aria-describedby={cn(\n              errorId && errorId,\n              helperId && helperId\n            ) || undefined}\n            aria-invalid={!!error}\n            aria-required={required}\n            {...props}\n          />\n\n          {/* 우측 액션 버튼들 */}\n          <div className={INPUT_STYLES.iconContainer.right}>\n            <div className=\"flex items-center gap-1\">\n              {/* 클리어 버튼 */}\n              {showClearButton && (\n                <button\n                  type=\"button\"\n                  className={cn(INPUT_STYLES.iconButton, 'p-0.5')}\n                  onClick={handleClear}\n                  aria-label=\"입력 내용 지우기\"\n                  tabIndex={-1}\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              )}\n\n              {/* 패스워드 토글 */}\n              {showPasswordToggle && (\n                <button\n                  type=\"button\"\n                  className={cn(INPUT_STYLES.iconButton, 'p-0.5')}\n                  onClick={togglePasswordVisibility}\n                  aria-label={showPassword ? '패스워드 숨기기' : '패스워드 보기'}\n                  tabIndex={-1}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </button>\n              )}\n\n              {/* 우측 아이콘 */}\n              {rightIcon && !showClearButton && !showPasswordToggle && rightIcon}\n            </div>\n          </div>\n        </div>\n\n        {/* 에러 메시지 */}\n        {error && (\n          <p \n            id={errorId}\n            className=\"mt-2 text-sm text-red-600 dark:text-red-400\"\n            role=\"alert\"\n          >\n            {error}\n          </p>\n        )}\n\n        {/* 도움말 텍스트 */}\n        {helperText && !error && (\n          <p \n            id={helperId}\n            className=\"mt-2 text-sm text-slate-500 dark:text-slate-400\"\n          >\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\n// 🔥 검색 전용 Input 컴포넌트\nexport const SearchInput = forwardRef<HTMLInputElement, Omit<InputProps, 'leftIcon' | 'type'>>(\n  (props, ref) => {\n    return (\n      <Input\n        ref={ref}\n        type=\"search\"\n        leftIcon={<Search className=\"h-4 w-4\" />}\n        placeholder=\"검색...\"\n        clearable\n        {...props}\n      />\n    );\n  }\n);\n\nSearchInput.displayName = 'SearchInput';\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/HydrationGuard.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\n\n// 🔥 기가차드 하이드레이션 보호 컴포넌트\ninterface HydrationGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport function HydrationGuard({ children, fallback = null }: HydrationGuardProps): React.ReactElement {\n  const [isHydrated, setIsHydrated] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsHydrated(true);\n  }, []);\n\n  return <>{isHydrated ? children : fallback}</>;\n}\n\nexport default HydrationGuard;\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUO,SAAS,eAAe,EAAE,QAAQ,EAAE,WAAW,IAAI,EAAuB;;IAC/E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;oCAAE;YACR,cAAc;QAChB;mCAAG,EAAE;IAEL,qBAAO;kBAAG,aAAa,WAAW;;AACpC;GARgB;KAAA;uCAUD","debugId":null}},
    {"offset": {"line": 1308, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/contexts/GlobalMonitoringContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useCallback, useLayoutEffect, useMemo } from 'react';\nimport { Logger } from '../../shared/logger';\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface MonitoringState {\n  isMonitoring: boolean;\n  isAIOpen: boolean;\n  startTime: Date | null;\n  sessionData: {\n    wpm: number;\n    words: number;\n    time: number;\n  };\n}\n\nexport interface MonitoringContextType {\n  state: MonitoringState;\n  startMonitoring: () => Promise<void>;\n  stopMonitoring: () => Promise<void>;\n  toggleAI: () => void;\n  updateSessionData: (data: Partial<MonitoringState['sessionData']>) => void;\n}\n\n// 🔥 컨텍스트 생성\nexport const MonitoringContext = createContext<MonitoringContextType | undefined>(undefined);\n\n// 🔥 초기 상태 상수화 (메모리 최적화)\nconst INITIAL_STATE: MonitoringState = {\n  isMonitoring: false,\n  isAIOpen: false,\n  startTime: null,\n  sessionData: {\n    wpm: 0,\n    words: 0,\n    time: 0,\n  },\n} as const;\n\n// 🔥 프로바이더 컴포넌트\nexport function MonitoringProvider({ children }: { children: React.ReactNode }): React.ReactElement {\n  // 🔥 하이드레이션 불일치 완전 해결: 서버와 클라이언트 동일한 초기값\n  const [state, setState] = useState<MonitoringState>(INITIAL_STATE);\n\n  // 🔥 클라이언트 마운트 후 localStorage에서 상태 복원 (useLayoutEffect로 즉시 실행)\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        const savedState = localStorage.getItem('monitoring-state');\n        if (savedState) {\n          const parsed = JSON.parse(savedState);\n          setState(prev => ({\n            ...prev,\n            isMonitoring: parsed.isMonitoring || false,\n            isAIOpen: parsed.isAIOpen || false,\n            startTime: parsed.startTime ? new Date(parsed.startTime) : null,\n            sessionData: {\n              ...prev.sessionData,\n              ...parsed.sessionData,\n            },\n          }));\n          Logger.debug('MONITORING_CONTEXT', 'State restored from localStorage', parsed);\n        }\n      } catch (error) {\n        Logger.error('MONITORING_CONTEXT', 'Failed to load state from localStorage', error);\n      }\n    }\n  }, []);\n\n  // 🔥 상태 변경 시 localStorage에 저장 (즉시 실행) - 디바운스 적용\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      const timeoutId = setTimeout(() => {\n        try {\n          localStorage.setItem('monitoring-state', JSON.stringify(state));\n          Logger.debug('MONITORING_CONTEXT', 'State saved to localStorage', state);\n        } catch (error) {\n          Logger.error('MONITORING_CONTEXT', 'Failed to save state to localStorage', error);\n        }\n      }, 100); // 100ms 디바운스\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [state]);\n\n  const startMonitoring = useCallback(async (): Promise<void> => {\n    try {\n      Logger.info('MONITORING_CONTEXT', 'Starting monitoring');\n      \n      const result = await window.electronAPI.keyboard.startMonitoring();\n      if (result.success) {\n        setState(prev => ({\n          ...prev,\n          isMonitoring: true,\n          startTime: new Date(),\n        }));\n        Logger.info('MONITORING_CONTEXT', 'Monitoring started successfully');\n      } else {\n        Logger.error('MONITORING_CONTEXT', 'Failed to start monitoring', result.error);\n        throw new Error(result.error || 'Failed to start monitoring');\n      }\n    } catch (error) {\n      Logger.error('MONITORING_CONTEXT', 'Error starting monitoring', error);\n      throw error;\n    }\n  }, []);\n\n  const stopMonitoring = useCallback(async (): Promise<void> => {\n    try {\n      Logger.info('MONITORING_CONTEXT', 'Stopping monitoring');\n      \n      const result = await window.electronAPI.keyboard.stopMonitoring();\n      if (result.success) {\n        setState(prev => ({\n          ...prev,\n          isMonitoring: false,\n          startTime: null,\n        }));\n        Logger.info('MONITORING_CONTEXT', 'Monitoring stopped successfully');\n      } else {\n        Logger.error('MONITORING_CONTEXT', 'Failed to stop monitoring', result.error);\n        throw new Error(result.error || 'Failed to stop monitoring');\n      }\n    } catch (error) {\n      Logger.error('MONITORING_CONTEXT', 'Error stopping monitoring', error);\n      throw error;\n    }\n  }, []);\n\n  const toggleAI = useCallback((): void => {\n    setState(prev => ({\n      ...prev,\n      isAIOpen: !prev.isAIOpen,\n    }));\n    Logger.info('MONITORING_CONTEXT', 'AI Panel toggled');\n  }, []);\n\n  const updateSessionData = useCallback((data: Partial<MonitoringState['sessionData']>): void => {\n    setState(prev => ({\n      ...prev,\n      sessionData: {\n        ...prev.sessionData,\n        ...data,\n      },\n    }));\n  }, []);\n\n  // 🔥 컨텍스트 값 메모화 (성능 최적화)\n  const contextValue = useMemo<MonitoringContextType>(() => ({\n    state,\n    startMonitoring,\n    stopMonitoring,\n    toggleAI,\n    updateSessionData,\n  }), [state, startMonitoring, stopMonitoring, toggleAI, updateSessionData]);\n\n  return (\n    <MonitoringContext.Provider value={contextValue}>\n      {children}\n    </MonitoringContext.Provider>\n  );\n}\n\n// 🔥 커스텀 훅\nexport function useMonitoring(): MonitoringContextType {\n  const context = useContext(MonitoringContext);\n  if (context === undefined) {\n    throw new Error('useMonitoring must be used within a MonitoringProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/layout/AppHeader.tsx"],"sourcesContent":["'use client';\n\nimport { Bell, Search, User, Menu, Activity } from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { SearchInput } from '../ui/Input';\nimport { Avatar } from '../ui/Avatar';\nimport { Badge } from '../ui/Badge';\nimport { HydrationGuard } from '../ui/HydrationGuard';\nimport { useState } from 'react';\nimport { Logger } from '../../../shared/logger';\nimport { useMonitoring } from '../../contexts/GlobalMonitoringContext';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수 - macOS 스타일\nconst HEADER_STYLES = {\n  container: 'h-16 bg-white/80 dark:bg-slate-900/80 backdrop-blur-md border-b border-slate-200/50 dark:border-slate-700/50 flex items-center justify-between px-6 z-80 supports-[backdrop-filter]:bg-white/60 dark:supports-[backdrop-filter]:bg-slate-900/60',\n  leftSection: 'flex items-center space-x-4',\n  menuButton: 'lg:hidden',\n  searchContainer: 'relative hidden md:block w-96',\n  rightSection: 'flex items-center space-x-3',\n  notificationButton: 'relative',\n  userSection: 'flex items-center space-x-2',\n  userName: 'hidden sm:block font-medium text-slate-900 dark:text-slate-100',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\ninterface AppHeaderProps {\n  readonly onMenuToggle?: () => void;\n  readonly user?: {\n    readonly name: string;\n    readonly avatar?: string;\n    readonly status?: 'online' | 'away' | 'busy' | 'offline';\n  };\n  readonly notificationCount?: number;\n  readonly onSearch?: (query: string) => void;\n  readonly onNotificationClick?: () => void;\n  readonly onUserClick?: () => void;\n}\n\nexport function AppHeader({ \n  onMenuToggle, \n  user,\n  notificationCount = 0,\n  onSearch,\n  onNotificationClick,\n  onUserClick,\n}: AppHeaderProps): React.ReactElement {\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const { state } = useMonitoring();\n  const { isMonitoring } = state;\n\n  const handleSearch = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n    if (searchQuery.trim()) {\n      Logger.info('HEADER', 'Search performed', { query: searchQuery });\n      onSearch?.(searchQuery.trim());\n    }\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleNotificationClick = (): void => {\n    Logger.info('HEADER', 'Notifications clicked', { count: notificationCount });\n    onNotificationClick?.();\n  };\n\n  const handleUserClick = (): void => {\n    Logger.info('HEADER', 'User menu clicked', { user: user?.name || 'anonymous' });\n    onUserClick?.();\n  };\n\n  const handleMenuToggle = (): void => {\n    Logger.info('HEADER', 'Menu toggle clicked');\n    onMenuToggle?.();\n  };\n\n  return (\n    <header className={HEADER_STYLES.container} role=\"banner\">\n      {/* 좌측 섹션 */}\n      <div className={HEADER_STYLES.leftSection}>\n        {/* 모바일 메뉴 버튼 */}\n        {onMenuToggle && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className={HEADER_STYLES.menuButton}\n            onClick={handleMenuToggle}\n            aria-label=\"메뉴 토글\"\n          >\n            <Menu className=\"w-5 h-5\" />\n          </Button>\n        )}\n\n        {/* 검색 */}\n        <div className={HEADER_STYLES.searchContainer}>\n          <form onSubmit={handleSearch}>\n            <SearchInput\n              placeholder=\"프로젝트, 파일 검색...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              aria-label=\"검색어 입력\"\n            />\n          </form>\n        </div>\n      </div>\n\n      {/* 우측 섹션 */}\n      <div className={HEADER_STYLES.rightSection}>\n        {/* 모니터링 상태 표시 */}\n        <HydrationGuard fallback={null}>\n          {isMonitoring && (\n            <div className=\"flex items-center gap-2 px-3 py-1.5 bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 rounded-full text-sm\">\n              <Activity className=\"w-4 h-4 animate-pulse\" />\n              <span className=\"font-medium\">모니터링 중</span>\n            </div>\n          )}\n        </HydrationGuard>\n\n        {/* 알림 버튼 */}\n        <div className={HEADER_STYLES.notificationButton}>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleNotificationClick}\n            aria-label={`알림 ${notificationCount}개`}\n          >\n            <Bell className=\"w-5 h-5\" />\n          </Button>\n          {notificationCount > 0 && (\n            <Badge\n              variant=\"danger\"\n              size=\"sm\"\n              className=\"absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 text-xs\"\n            >\n              {notificationCount > 9 ? '9+' : notificationCount}\n            </Badge>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;AAYA,wCAAwC;AACxC,MAAM,gBAAgB;IACpB,WAAW;IACX,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,oBAAoB;IACpB,aAAa;IACb,UAAU;AACZ;AAgBO,SAAS,UAAU,EACxB,YAAY,EACZ,IAAI,EACJ,oBAAoB,CAAC,EACrB,QAAQ,EACR,mBAAmB,EACnB,WAAW,EACI;;IACf,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD;IAC9B,MAAM,EAAE,YAAY,EAAE,GAAG;IAEzB,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QACpB,IAAI,YAAY,IAAI,IAAI;YACtB,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,oBAAoB;gBAAE,OAAO;YAAY;YAC/D,WAAW,YAAY,IAAI;QAC7B;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,eAAe,MAAM,MAAM,CAAC,KAAK;IACnC;IAEA,MAAM,0BAA0B;QAC9B,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,yBAAyB;YAAE,OAAO;QAAkB;QAC1E;IACF;IAEA,MAAM,kBAAkB;QACtB,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,qBAAqB;YAAE,MAAM,MAAM,QAAQ;QAAY;QAC7E;IACF;IAEA,MAAM,mBAAmB;QACvB,0HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU;QACtB;IACF;IAEA,qBACE,8VAAC;QAAO,WAAW,cAAc,SAAS;QAAE,MAAK;;0BAE/C,8VAAC;gBAAI,WAAW,cAAc,WAAW;;oBAEtC,8BACC,8VAAC,iJAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,WAAW,cAAc,UAAU;wBACnC,SAAS;wBACT,cAAW;kCAEX,cAAA,8VAAC,0RAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;kCAKpB,8VAAC;wBAAI,WAAW,cAAc,eAAe;kCAC3C,cAAA,8VAAC;4BAAK,UAAU;sCACd,cAAA,8VAAC,gJAAA,CAAA,cAAW;gCACV,aAAY;gCACZ,OAAO;gCACP,UAAU;gCACV,cAAW;;;;;;;;;;;;;;;;;;;;;;0BAOnB,8VAAC;gBAAI,WAAW,cAAc,YAAY;;kCAExC,8VAAC,yJAAA,CAAA,iBAAc;wBAAC,UAAU;kCACvB,8BACC,8VAAC;4BAAI,WAAU;;8CACb,8VAAC,kSAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,8VAAC;oCAAK,WAAU;8CAAc;;;;;;;;;;;;;;;;;kCAMpC,8VAAC;wBAAI,WAAW,cAAc,kBAAkB;;0CAC9C,8VAAC,iJAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,cAAY,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;0CAEtC,cAAA,8VAAC,0RAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;4BAEjB,oBAAoB,mBACnB,8VAAC,gJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,MAAK;gCACL,WAAU;0CAET,oBAAoB,IAAI,OAAO;;;;;;;;;;;;;;;;;;;;;;;;AAO9C;GAxGgB;;QASI,0JAAA,CAAA,gBAAa;;;KATjB","debugId":null}},
    {"offset": {"line": 1730, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/providers/ThemeProvider.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { Logger } from '../../shared/logger';\n\n// 🔥 테마 타입 정의\nexport type Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextType {\n  theme: Theme;\n  resolvedTheme: 'light' | 'dark'; // 실제 적용된 테마 (system 해결됨)\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n}\n\n// 🔥 Context 생성\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// 🔥 프리컴파일된 스타일\nconst THEME_STYLES = {\n  root: 'transition-colors duration-200',\n} as const;\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport function ThemeProvider({ children, defaultTheme = 'system' }: ThemeProviderProps): React.ReactElement {\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\n  const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>('light');\n\n  // 🔥 시스템 테마 감지\n  const getSystemTheme = useCallback((): 'light' | 'dark' => {\n    if (typeof window === 'undefined') return 'light';\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }, []);\n\n  // 🔥 해결된 테마 계산\n  const calculateResolvedTheme = useCallback((currentTheme: Theme): 'light' | 'dark' => {\n    if (currentTheme === 'system') {\n      return getSystemTheme();\n    }\n    return currentTheme;\n  }, [getSystemTheme]);\n\n  // 🔥 테마 설정 함수\n  const setTheme = useCallback(async (newTheme: Theme): Promise<void> => {\n    try {\n      Logger.info('THEME_PROVIDER', 'Theme changing', { from: theme, to: newTheme });\n      \n      setThemeState(newTheme);\n      const resolved = calculateResolvedTheme(newTheme);\n      setResolvedTheme(resolved);\n\n      // 🔥 백엔드에 테마 저장\n      try {\n        const result = await window.electronAPI.settings.set('app.theme', newTheme);\n        if (result.success) {\n          Logger.info('THEME_PROVIDER', 'Theme saved to backend', { theme: newTheme, resolved });\n        } else {\n          Logger.warn('THEME_PROVIDER', 'Failed to save theme to backend', result.error);\n        }\n      } catch (error) {\n        Logger.error('THEME_PROVIDER', 'Error saving theme to backend', error);\n      }\n\n      // 🔥 HTML 클래스 업데이트 (즉시)\n      const root = document.documentElement;\n      root.classList.remove('light', 'dark');\n      root.classList.add(resolved);\n      \n      // 🔥 로컬 스토리지에도 저장 (백업)\n      localStorage.setItem('loop-theme', newTheme);\n      \n      Logger.info('THEME_PROVIDER', 'Theme applied successfully', { \n        theme: newTheme, \n        resolved,\n        htmlClass: root.className \n      });\n    } catch (error) {\n      Logger.error('THEME_PROVIDER', 'Error setting theme', error);\n    }\n  }, [theme, calculateResolvedTheme]);\n\n  // 🔥 테마 토글 함수\n  const toggleTheme = useCallback((): void => {\n    const newTheme = resolvedTheme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  }, [resolvedTheme, setTheme]);\n\n  // 🔥 초기 테마 로드\n  useEffect(() => {\n    const loadInitialTheme = async (): Promise<void> => {\n      try {\n        // 1. 백엔드에서 테마 가져오기\n        let savedTheme: Theme = defaultTheme;\n        \n        try {\n          const result = await window.electronAPI.settings.get('app.theme');\n          if (result.success && result.data) {\n            const themeValue = result.data as Theme;\n            if (['light', 'dark', 'system'].includes(themeValue)) {\n              savedTheme = themeValue;\n              Logger.info('THEME_PROVIDER', 'Theme loaded from backend', { theme: savedTheme });\n            }\n          }\n        } catch (error) {\n          Logger.warn('THEME_PROVIDER', 'Failed to load theme from backend, using fallback', error);\n          \n          // 2. 로컬 스토리지 폴백\n          const localTheme = localStorage.getItem('loop-theme') as Theme;\n          if (localTheme && ['light', 'dark', 'system'].includes(localTheme)) {\n            savedTheme = localTheme;\n            Logger.info('THEME_PROVIDER', 'Theme loaded from localStorage', { theme: savedTheme });\n          }\n        }\n\n        // 3. 테마 적용\n        setThemeState(savedTheme);\n        const resolved = calculateResolvedTheme(savedTheme);\n        setResolvedTheme(resolved);\n\n        // 4. HTML 클래스 즉시 적용\n        const root = document.documentElement;\n        root.classList.remove('light', 'dark');\n        root.classList.add(resolved);\n\n        Logger.info('THEME_PROVIDER', 'Initial theme applied', { \n          theme: savedTheme, \n          resolved,\n          source: 'backend/localStorage'\n        });\n      } catch (error) {\n        Logger.error('THEME_PROVIDER', 'Error loading initial theme', error);\n        \n        // 안전한 폴백\n        const resolved = calculateResolvedTheme(defaultTheme);\n        setResolvedTheme(resolved);\n        document.documentElement.classList.add(resolved);\n      }\n    };\n\n    loadInitialTheme();\n  }, [defaultTheme, calculateResolvedTheme]);\n\n  // 🔥 시스템 테마 변경 감지\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const handleSystemThemeChange = (): void => {\n      if (theme === 'system') {\n        const newResolved = getSystemTheme();\n        setResolvedTheme(newResolved);\n        \n        // HTML 클래스 업데이트\n        const root = document.documentElement;\n        root.classList.remove('light', 'dark');\n        root.classList.add(newResolved);\n        \n        Logger.info('THEME_PROVIDER', 'System theme changed', { \n          theme: 'system', \n          resolved: newResolved \n        });\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleSystemThemeChange);\n    return () => mediaQuery.removeEventListener('change', handleSystemThemeChange);\n  }, [theme, getSystemTheme]);\n\n  const contextValue: ThemeContextType = {\n    theme,\n    resolvedTheme,\n    setTheme,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      <div className={THEME_STYLES.root}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\n// 🔥 커스텀 훅\nexport function useTheme(): ThemeContextType {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1968, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/app/layout.tsx"],"sourcesContent":["'use client';\n\n// 🔥 global 폴리필 추가 (최우선)\nif (typeof global === 'undefined') {\n  (globalThis as any).global = globalThis;\n}\n\nimport { Inter } from 'next/font/google';\nimport { ReactNode, useState, useLayoutEffect } from 'react';\nimport { usePathname } from 'next/navigation';\nimport { AppSidebar } from '../components/layout/AppSidebar';\nimport { AppHeader } from '../components/layout/AppHeader';\nimport { MonitoringProvider } from '../contexts/GlobalMonitoringContext';\nimport { ThemeProvider } from '../providers/ThemeProvider';\nimport { Logger } from '../../shared/logger';\nimport './globals.css';\n\n// 🔥 기가차드 규칙: Inter 폰트 최적화\nconst inter = Inter({ \n  subsets: ['latin'],\n  display: 'swap',\n  preload: true\n});\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst LAYOUT_STYLES = {\n  html: 'h-full',\n  body: 'h-full bg-slate-50 dark:bg-slate-900 antialiased',\n  container: 'h-screen flex',\n  sidebar: 'flex-shrink-0',\n  main: 'flex-1 flex flex-col overflow-hidden',\n  header: 'flex-shrink-0',\n  content: 'flex-1 overflow-auto',\n} as const;\n\n// 🔥 기가차드 규칙: 메타데이터 타입 정의\ninterface RootLayoutProps {\n  readonly children: ReactNode;\n}\n\nexport default function RootLayout({ children }: RootLayoutProps): React.ReactElement {\n  // 🔥 하이드레이션 안전한 사이드바 상태 초기화 (서버와 클라이언트 동일)\n  const [sidebarCollapsed, setSidebarCollapsed] = useState<boolean>(false);\n  const [isClientMounted, setIsClientMounted] = useState<boolean>(false);\n  const pathname = usePathname();\n\n  // 🔥 DOM 업데이트 전에 localStorage에서 사이드바 상태 즉시 복원\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        const savedState = localStorage.getItem('sidebar-collapsed');\n        if (savedState === 'true') {\n          setSidebarCollapsed(true);\n        }\n        Logger.debug('LAYOUT', 'Sidebar state restored immediately', { collapsed: savedState === 'true' });\n      } catch (error) {\n        Logger.error('LAYOUT', 'Failed to restore sidebar state', error);\n      }\n    }\n    setIsClientMounted(true);\n  }, []);\n\n  const handleNavigate = (href: string): void => {\n    // Next.js App Router는 자동으로 네비게이션을 처리합니다\n    window.location.href = href;\n  };\n\n  const handleToggleSidebar = (): void => {\n    const newState = !sidebarCollapsed;\n    setSidebarCollapsed(newState);\n    \n    // 🔥 localStorage에 상태 저장 (일관된 키 사용)\n    if (typeof window !== 'undefined') {\n      try {\n        localStorage.setItem('sidebar-collapsed', newState.toString());\n        Logger.debug('LAYOUT', 'Sidebar state saved', { collapsed: newState });\n      } catch (error) {\n        Logger.error('LAYOUT', 'Failed to save sidebar state', error);\n      }\n    }\n  };\n\n  return (\n    <html lang=\"ko\" className={`${inter.className} ${LAYOUT_STYLES.html}`}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Loop - AI 기반 타이핑 분석 도구\" />\n        <title>Loop</title>\n      </head>\n      <body className={LAYOUT_STYLES.body}>\n        <ThemeProvider defaultTheme=\"system\">\n          <MonitoringProvider>\n            <div className={LAYOUT_STYLES.container}>\n              {/* 사이드바 */}\n              <aside className={LAYOUT_STYLES.sidebar}>\n                <AppSidebar \n                  activeRoute={pathname}\n                  onNavigate={handleNavigate}\n                  collapsed={sidebarCollapsed}\n                  onToggleCollapse={handleToggleSidebar}\n                />\n              </aside>\n\n              {/* 메인 콘텐츠 */}\n              <main className={LAYOUT_STYLES.main}>\n                {/* 헤더 */}\n                <header className={LAYOUT_STYLES.header}>\n                  <AppHeader />\n                </header>\n\n                {/* 페이지 콘텐츠 */}\n                <div className={LAYOUT_STYLES.content}>\n                  {children}\n                </div>\n              </main>\n            </div>\n          </MonitoringProvider>\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAdA;AAEA,yBAAyB;AACzB,IAAI,OAAO,WAAW,aAAa;IAChC,WAAmB,MAAM,GAAG;AAC/B;;;;;;;;;;AAmBA,4BAA4B;AAC5B,MAAM,gBAAgB;IACpB,MAAM;IACN,MAAM;IACN,WAAW;IACX,SAAS;IACT,MAAM;IACN,QAAQ;IACR,SAAS;AACX;AAOe,SAAS,WAAW,EAAE,QAAQ,EAAmB;;IAC9D,2CAA2C;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAW;IAClE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,WAAW,CAAA,GAAA,sSAAA,CAAA,cAAW,AAAD;IAE3B,8CAA8C;IAC9C,CAAA,GAAA,8TAAA,CAAA,kBAAe,AAAD;sCAAE;YACd,wCAAmC;gBACjC,IAAI;oBACF,MAAM,aAAa,aAAa,OAAO,CAAC;oBACxC,IAAI,eAAe,QAAQ;wBACzB,oBAAoB;oBACtB;oBACA,0HAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,sCAAsC;wBAAE,WAAW,eAAe;oBAAO;gBAClG,EAAE,OAAO,OAAO;oBACd,0HAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,mCAAmC;gBAC5D;YACF;YACA,mBAAmB;QACrB;qCAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC;QACtB,wCAAwC;QACxC,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IAEA,MAAM,sBAAsB;QAC1B,MAAM,WAAW,CAAC;QAClB,oBAAoB;QAEpB,oCAAoC;QACpC,wCAAmC;YACjC,IAAI;gBACF,aAAa,OAAO,CAAC,qBAAqB,SAAS,QAAQ;gBAC3D,0HAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,uBAAuB;oBAAE,WAAW;gBAAS;YACtE,EAAE,OAAO,OAAO;gBACd,0HAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,gCAAgC;YACzD;QACF;IACF;IAEA,qBACE,8VAAC;QAAK,MAAK;QAAK,WAAW,GAAG,4IAAA,CAAA,UAAK,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,IAAI,EAAE;;0BACnE,8VAAC;;kCACC,8VAAC;wBAAK,SAAQ;;;;;;kCACd,8VAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,8VAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;kCACjC,8VAAC;kCAAM;;;;;;;;;;;;0BAET,8VAAC;gBAAK,WAAW,cAAc,IAAI;0BACjC,cAAA,8VAAC,iJAAA,CAAA,gBAAa;oBAAC,cAAa;8BAC1B,cAAA,8VAAC,0JAAA,CAAA,qBAAkB;kCACjB,cAAA,8VAAC;4BAAI,WAAW,cAAc,SAAS;;8CAErC,8VAAC;oCAAM,WAAW,cAAc,OAAO;8CACrC,cAAA,8VAAC,yJAAA,CAAA,aAAU;wCACT,aAAa;wCACb,YAAY;wCACZ,WAAW;wCACX,kBAAkB;;;;;;;;;;;8CAKtB,8VAAC;oCAAK,WAAW,cAAc,IAAI;;sDAEjC,8VAAC;4CAAO,WAAW,cAAc,MAAM;sDACrC,cAAA,8VAAC,wJAAA,CAAA,YAAS;;;;;;;;;;sDAIZ,8VAAC;4CAAI,WAAW,cAAc,OAAO;sDAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnB;GAlFwB;;QAIL,sSAAA,CAAA,cAAW;;;KAJN","debugId":null}}]
}